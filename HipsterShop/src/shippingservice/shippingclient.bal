import ballerina/grpc;
import ballerinaDemo/cartservice;
import ballerinaDemo/currencyservice;

public type ShippingServiceBlockingClient client object {

    *grpc:AbstractClientEndpoint;

    private grpc:Client grpcClient;

    public function __init(string url, grpc:ClientConfiguration? config = ()) {
        // initialize client endpoint.
        grpc:Client c = new(url, config);
        grpc:Error? result = c.initStub(self, "blocking", ROOT_DESCRIPTOR, getDescriptorMap());
        if (result is grpc:Error) {
            error err = result;
            panic err;
        } else {
            self.grpcClient = c;
        }
    }

    public remote function GetQuote(GetQuoteRequest req, grpc:Headers? headers = ()) returns ([GetQuoteResponse, grpc:Headers]|grpc:Error) {
        
        var payload = check self.grpcClient->blockingExecute("hipstershop.ShippingService/GetQuote", req, headers);
        grpc:Headers resHeaders = new;
        anydata result = ();
        [result, resHeaders] = payload;
        var value = typedesc<GetQuoteResponse>.constructFrom(result);
        if (value is GetQuoteResponse) {
            return [value, resHeaders];
        } else {
            return grpc:prepareError(grpc:INTERNAL_ERROR, "Error while constructing the message", value);
        }
    }

    public remote function ShipOrder(ShipOrderRequest req, grpc:Headers? headers = ()) returns ([ShipOrderResponse, grpc:Headers]|grpc:Error) {
        
        var payload = check self.grpcClient->blockingExecute("hipstershop.ShippingService/ShipOrder", req, headers);
        grpc:Headers resHeaders = new;
        anydata result = ();
        [result, resHeaders] = payload;
        var value = typedesc<ShipOrderResponse>.constructFrom(result);
        if (value is ShipOrderResponse) {
            return [value, resHeaders];
        } else {
            return grpc:prepareError(grpc:INTERNAL_ERROR, "Error while constructing the message", value);
        }
    }

};

public type ShippingServiceClient client object {

    *grpc:AbstractClientEndpoint;

    private grpc:Client grpcClient;

    public function __init(string url, grpc:ClientConfiguration? config = ()) {
        // initialize client endpoint.
        grpc:Client c = new(url, config);
        grpc:Error? result = c.initStub(self, "non-blocking", ROOT_DESCRIPTOR, getDescriptorMap());
        if (result is grpc:Error) {
            error err = result;
            panic err;
        } else {
            self.grpcClient = c;
        }
    }

    public remote function GetQuote(GetQuoteRequest req, service msgListener, grpc:Headers? headers = ()) returns (grpc:Error?) {
        
        return self.grpcClient->nonBlockingExecute("hipstershop.ShippingService/GetQuote", req, msgListener, headers);
    }

    public remote function ShipOrder(ShipOrderRequest req, service msgListener, grpc:Headers? headers = ()) returns (grpc:Error?) {
        
        return self.grpcClient->nonBlockingExecute("hipstershop.ShippingService/ShipOrder", req, msgListener, headers);
    }

};


public type GetQuoteRequest record {|
    Address address;
    cartservice:CartItem[] items;
    
|};


public type GetQuoteResponse record {|
    currencyservice:Money cost_usd;
    
|};


public type ShipOrderRequest record {|
    Address address;
    cartservice:CartItem[] items;
    
|};


public type ShipOrderResponse record {|
    string tracking_id;
    
|};


public type Address record {|
    string street_address;
    string city;
    string state;
    string country;
    int zip_code;
    
|};

const string
function getDescriptorMap() returns map<string> {
    return {
        "shippingservice.proto
        
    };
}

